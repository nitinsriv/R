vif(model_9)
# carbodywagon became insignificant i
# drop carbodywagon
# Execute the model_10 multilinear model in the training set.
model_10 <-lm(price~aspiration + enginelocation + carwidth + curbweight + stroke +
enginetypedohcv + enginetypel +
enginetypeohcf + enginetyperotor + cylindernumberfive + cylindernumberfour +
cylindernumbersix + CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_10)
vif(model_10)
# carwidth and curbweight are corelated
# drop carwidth since it correlation to price is less
# Execute the model_11 multilinear model in the training set.
model_11 <-lm(price~aspiration + enginelocation + curbweight + stroke +
enginetypedohcv + enginetypel +
enginetypeohcf + enginetyperotor + cylindernumberfive + cylindernumberfour +
cylindernumbersix + CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_11)
vif(model_11)
# stroke became insignificant with high VIF
# drop stroke
# Execute the model_12 multilinear model in the training set.
model_12 <-lm(price~aspiration + enginelocation + curbweight + enginetypedohcv + enginetypel +
enginetypeohcf + enginetyperotor + cylindernumberfive + cylindernumberfour +
cylindernumbersix + CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_12)
vif(model_12)
# cylindernumbersix negatively correlated to cylindernumberfour
# drop cylindernumbersix since it is less ocrrelated ot price
# Execute the model_13 multilinear model in the training set.
model_13 <-lm(price~aspiration + enginelocation + curbweight + enginetypedohcv + enginetypel +
enginetypeohcf + enginetyperotor + cylindernumberfive + cylindernumberfour +
CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_13)
vif(model_13)
# enginetypedohcv, aspiration, enginetyperotor, CarNamebmw, CarNamejaguar are insignificant
# drop enginetyperotor since it is less correlated to price and highest VIF
# Execute the model_14 multilinear model in the training set.
model_14 <-lm(price~aspiration + enginelocation + curbweight + enginetypedohcv + enginetypel +
enginetypeohcf + cylindernumberfive + cylindernumberfour + CarNameaudi + CarNamebmw +
CarNamedodge + CarNamehonda +   CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_14)
vif(model_14)
# enginetypedohcv, aspiration, CarNamebmw, CarNamejaguar are insignificant
# drop enginetypedohcv since it is less correlated to price
# Execute the model_15 multilinear model in the training set.
model_15 <-lm(price~aspiration + enginelocation + curbweight + enginetypel +
enginetypeohcf + cylindernumberfive + cylindernumberfour +
CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_15)
vif(model_15)
# aspiration, CarNamebmw, CarNamejaguar are insignificant
# drop aspiration since it is less correlated to price
# Execute the model_16 multilinear model in the training set.
model_16 <-lm(price~ enginelocation + curbweight + enginetypel +
enginetypeohcf + cylindernumberfive + cylindernumberfour +
CarNameaudi + CarNamebmw + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_16)
vif(model_16)
# CarNamebmw, CarNamejaguar are insignificant
# drop CarNamebmw since it is less correlated to price
# Execute the model_17 multilinear model in the training set.
model_17 <-lm(price~ enginelocation + curbweight + enginetypel +
enginetypeohcf + cylindernumberfive + cylindernumberfour +
CarNameaudi + CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamejaguar + CarNamemaxda + CarNamemazda +
CarNamemercury + CarNamemitsubishi + CarNamenissan + CarNameplymouth +
CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_17)
vif(model_17)
# CarNamejaguar is insignificant
# drop CarNamejaguar since it is less correlated to price
# Execute the model_18 multilinear model in the training set.
model_18 <-lm(price~ enginelocation + curbweight + enginetypel +  enginetypeohcf + cylindernumberfive +
cylindernumberfour + CarNameaudi + CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemaxda + CarNamemazda + CarNamemercury + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_18)
vif(model_18)
# curbweight related to cylindernumberfour
# drop cylindernumberfour since it is less correlated to price
# Execute the model_19 multilinear model in the training set.
model_19 <-lm(price~ enginelocation + curbweight + enginetypel +  enginetypeohcf + cylindernumberfive +
CarNameaudi + CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemaxda + CarNamemazda + CarNamemercury + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_19)
vif(model_19)
# enginelocation related to enginetypeohcf
# drop enginetypeohcf since it is less correlated to price
# Execute the model_20 multilinear model in the training set.
model_20 <-lm(price~ enginelocation + curbweight + enginetypel +  cylindernumberfive +
CarNameaudi + CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemaxda + CarNamemazda + CarNamemercury + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_20)
vif(model_20)
# CarNamemercury, CarNamemaxda, CarNameaudi, cylindernumberfive are insignificant
# drop CarNamemercury since it is less correlated to price
# Execute the model_21 multilinear model in the training set.
model_21 <-lm(price~ enginelocation + curbweight + enginetypel +  cylindernumberfive +
CarNameaudi + CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemaxda + CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_21)
vif(model_21)
# CarNamemaxda, CarNameaudi, cylindernumberfive are insignificant
# drop CarNamemaxda since it is less correlated to price
# Execute the model_22 multilinear model in the training set.
model_22 <-lm(price~ enginelocation + curbweight + enginetypel +  cylindernumberfive +
CarNameaudi + CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_22)
vif(model_22)
# CarNameaudi, cylindernumberfive are insignificant
# drop CarNameaudi since it is less correlated to price
# Execute the model_23 multilinear model in the training set.
model_23 <-lm(price~ enginelocation + curbweight + enginetypel +  cylindernumberfive +
CarNamedodge + CarNamehonda + CarNameisuzu +
CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_23)
vif(model_23)
# cylindernumberfive are insignificant
# drop cylindernumberfive since it is less correlated to price
# Execute the model_24 multilinear model in the training set.
model_24 <-lm(price~ enginelocation + curbweight + enginetypel +  CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_24)
vif(model_24)
# enginetypel corelated to curbweight
# drop enginetypel
# Execute the model_25 multilinear model in the training set.
model_25 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNamesaab + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_25)
vif(model_25)
# CarNamesaab, CarNamehonda, CarNamedodge,CarNameisuzu, CarNamemazda, CarNamenissan,CarNameplymouth,CarNamerenault
# CarNamevolkswagen, CarNamevolvo are insignificant
# drop CarNamesaab since it least effect price
# Execute the model_26 multilinear model in the training set.
model_26 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamemazda + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_26)
vif(model_26)
# CarNamedodge,CarNameisuzu, CarNamemazda, CarNamenissan,CarNameplymouth,CarNamerenault, CarNamehonda
# CarNamevolkswagen, CarNamevolvo are insignificant
# drop CarNamemazda since it least effect price
# Execute the model_27 multilinear model in the training set.
model_27 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNamerenault + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_27)
vif(model_27)
# CarNamedodge,CarNameisuzu, CarNamenissan,CarNameplymouth,CarNamerenault, CarNamehonda
# CarNamevolkswagen, CarNamevolvo are insignificant
# drop CarNamerenault since it least effect price
# Execute the model_28 multilinear model in the training set.
model_28 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda +
CarNameisuzu + CarNamemitsubishi + CarNamenissan +
CarNameplymouth + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_28)
vif(model_28)
# CarNamedodge,CarNameisuzu, CarNamenissan,CarNameplymouth,CarNamevolkswagen,
# CarNamehonda, CarNamevolvo are insignificant
# drop CarNameisuzu since it least effect price
# Execute the model_29 multilinear model in the training set.
model_29 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNamemitsubishi +
CarNamenissan + CarNameplymouth + CarNametoyota + CarNamevolkswagen +
CarNamevolvo,data=train)
# Check the summary of model.
summary(model_29)
vif(model_29)
# CarNamedodge, CarNamenissan,CarNameplymouth,CarNamevolkswagen, CarNamevolvo, CarNamehonda are insignificant
# drop CarNamevolkswagen since it least effect price
# Execute the model_30 multilinear model in the training set.
model_30 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNamemitsubishi +
CarNamenissan + CarNameplymouth + CarNametoyota + CarNamevolvo,data=train)
# Check the summary of model.
summary(model_30)
vif(model_30)
# CarNamedodge, CarNameplymouth, CarNamemitsubishi, CarNamevolvo, CarNamehonda are insignificant
# drop CarNamenissan since it least effect price
# Execute the model_31 multilinear model in the training set.
model_31 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNamemitsubishi +
CarNameplymouth + CarNametoyota + CarNamevolvo,data=train)
# Check the summary of model.
summary(model_31)
vif(model_31)
# CarNamedodge, CarNameplymouth, CarNamemitsubishi, CarNamevolvo, CarNamehonda are insignificant
# drop CarNameplymouth since it least effect price
# Execute the model_32 multilinear model in the training set.
model_32 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNamemitsubishi +
CarNametoyota + CarNamevolvo,data=train)
# Check the summary of model.
summary(model_32)
vif(model_32)
# CarNamedodge, CarNamevolvo, CarNamehonda, CarNamemitsubishi are insignificant
# drop CarNamemitsubishi since it least effect price
# Execute the model_33 multilinear model in the training set.
model_33 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNametoyota + CarNamevolvo,data=train)
# Check the summary of model.
summary(model_33)
vif(model_33)
# CarNamedodge, CarNamevolvo, CarNamehonda are insignificant
# drop CarNamevolvo since it least effect price
# Execute the model_34 multilinear model in the training set.
model_34 <-lm(price~ enginelocation + curbweight +  CarNamedodge + CarNamehonda + CarNametoyota, data=train)
# Check the summary of model.
summary(model_34)
vif(model_34)
# CarNamedodge, CarNamehonda are insignificant
# drop CarNamedodge since it least effect price
# Execute the model_35 multilinear model in the training set.
model_35 <-lm(price~ enginelocation + curbweight + CarNamehonda + CarNametoyota, data=train)
# Check the summary of model.
summary(model_35)
vif(model_35)
# CarNamehonda are insignificant
# drop CarNamehonda since it least effect price
# Execute the model_36 multilinear model in the training set.
model_36 <-lm(price~ enginelocation + curbweight + CarNametoyota, data=train)
# Check the summary of model.
summary(model_36)
# Adjusted R-squared:  0.7737
# no linear dependedncy
vif(model_36)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_36,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.6426946
# Difference between predicted r-square and r-square of model_36
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
# Generally, a deviation of +(-) 5% in the R-squared value of the model for the test data is acceptable.
# However, if the deviation is significant (>5%) then we need to recheck the model.
# Add symboling4 and check r squared for model
model_37 <-lm(price~ enginelocation + curbweight + CarNametoyota + symboling4, data=train)
# Check the summary of model.
# Adjusted R-squared:  0.7795
# Predictory variables: all significant
# No multicolinearity between variables
summary(model_37)
vif(model_37)
# plot Residuals vs Fitted
plot(model_37,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_37,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.6503431
# Difference between predicted r-square and r-square of model_36
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) +
geom_path(aes(test$carID, test$predicted_price, color="red"))
# Add enginetypel and check r squared for model
model_38 <-lm(price~ enginelocation + curbweight + CarNametoyota + symboling1 + enginetypel
, data=train)
# Check the summary of model.
summary(model_38)
vif(model_38)
# symboling1 became insignificant
# drop symboling 1
model_39 <-lm(price~ enginelocation + curbweight + CarNametoyota + enginetypel
, data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8005
# Predictor variables: all significant
summary(model_39)
vif(model_39)
# plot Residuals vs Fitted
plot(model_39,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_39,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.6930148
# Difference between predicted r-square and r-square decreeasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) +
geom_path(aes(test$carID, test$predicted_price, color="red"))
# Add carbodywagon and check r squared for model
model_40 <-lm(price~ enginelocation + curbweight + CarNametoyota + enginetypel +carbodywagon, data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8184
summary(model_40)
vif(model_40)
# plot Residuals vs Fitted
plot(model_40,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_40,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.7282913
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) +
geom_path(aes(test$carID, test$predicted_price, color="red"))
# Add carbodywagon and check r squared for model
model_41 <-lm(price~ enginelocation + curbweight + CarNametoyota + enginetypel +carbodywagon +aspiration, data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8264
summary(model_41)
vif(model_41)
# plot Residuals vs Fitted
plot(model_41,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_41,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.7392311
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) +
geom_path(aes(test$carID, test$predicted_price, color="red"))
# Add carbodywagon and check r squared for model
model_42 <-lm(price~ enginelocation + curbweight + CarNametoyota + enginetypel +carbodywagon +aspiration
+symboling4, data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8304
summary(model_42)
vif(model_42)
# plot Residuals vs Fitted
plot(model_42,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_42,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.7452911
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) +
geom_path(aes(test$carID, test$predicted_price, color="red"))
model_43 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel +
carbodywagon+aspiration +symboling4 ,data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8396
summary(model_43)
vif(model_43)
# plot Residuals vs Fitted
plot(model_43,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_43,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.8059223
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
model_44 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel + CarNamejaguar+
carbodywagon+aspiration +symboling4 ,data=train)
# Check the summary of model.
summary(model_44)
vif
# aspiration becomes insignificant
# dropping aspiration
model_45 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel +
CarNamejaguar+ carbodywagon+ symboling4 ,data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8435
summary(model_45)
vif(model_45)
# plot Residuals vs Fitted
plot(model_45,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_45,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.8306239
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) + geom_path(aes(test$carID, test$predicted_price, color="red"))
model_46 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel +
CarNamejaguar+ carbodywagon ,data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8435
summary(model_46)
vif(model_46)
# plot Residuals vs Fitted
plot(model_46,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_46,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.8306239
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) + geom_path(aes(test$carID, test$predicted_price, color="red"))
# aspiration becomes insignificant
# dropping aspiration
model_45 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel +
CarNamejaguar+ carbodywagon+ symboling4 ,data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8435
summary(model_45)
vif(model_45)
# plot Residuals vs Fitted
plot(model_45,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_45,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.8306239
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) + geom_path(aes(test$carID, test$predicted_price, color="red"))
model_46 <-lm(price~ enginelocation + curbweight + CarNametoyota + CarNamebmw + enginetypel +
CarNamejaguar+ carbodywagon ,data=train)
# Check the summary of model.
# Adjusted R-squared:  0.8435
summary(model_46)
vif(model_46)
# plot Residuals vs Fitted
plot(model_46,pch=16,which=1)
# Predict the house prices in the testing dataset
Predict_1 <- predict(model_46,test[,-1])
test$predicted_price <- Predict_1
# calculate r-squared: 0.8306239
# Difference between predicted r-square and r-square decreasing
r <- cor(test$price,test$predicted_price)
rsquared <- cor(test$price,test$predicted_price)^2
rsquared
test$carID <- seq(1,62,1)
# Plot - Actual vs Predicted Views Model9
ggplot(test, aes(test$carID,test$price)) + geom_path(aes(color = "blue" )) + geom_path(aes(test$carID, test$predicted_price, color="red"))
